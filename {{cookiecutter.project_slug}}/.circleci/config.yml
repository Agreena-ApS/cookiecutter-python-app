version: 2.1


orbs:
  python: agreena-aps/python@2.4.0


executors:
  docker-publisher:
    docker:
      - image: cimg/python:3.10
    environment:
      IMAGE_NAME: eu.gcr.io/hummingbird-technologies/platform/{{cookiecutter.project_slug}}
    resource_class: small

  tests-runner:
    docker:
      - image: cimg/python:3.11
    resource_class: small


jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build --progress=plain -t $IMAGE_NAME:latest .
      - run: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - image.tar
    environment:
      DOCKER_BUILDKIT: 1
      GIT_COMMIT: $CIRCLE_SHA1

  push-docker-image:
    executor: docker-publisher
    environment:
      PIPELINE_NUMBER: << pipeline.number >>
    parameters:
      env:
        type: string
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          command: docker load -i /tmp/workspace/image.tar
          name: Load image from workspace
      - run:
          command: |
            docker tag $IMAGE_NAME:latest $IMAGE_NAME:$CIRCLE_SHA1
            docker tag $IMAGE_NAME:$CIRCLE_SHA1 $IMAGE_NAME:<< parameters.env >>-$PIPELINE_NUMBER
            docker tag $IMAGE_NAME:$CIRCLE_SHA1 $IMAGE_NAME:<< parameters.env >>
          name: Tag image
      - run:
          command: echo $GSA_KEY | docker login -u _json_key --password-stdin https://eu.gcr.io
          name: Log in to Google Container Registry
      - run:
          command: docker push --all-tags $IMAGE_NAME
          name: Push image


workflows:
  main:
    jobs:
      - build
      - python/code-qa:
          name: code-qa
          executor: tests-runner
          pkg-manager: pip
          pip-dependency-file: requirements/development.txt
          black-args: "."
          {% if cookiecutter.code_qa == 'pylint' -%}
          pylint-args: {{cookiecutter.app_name}}/ tests/ --rcfile=.pylintrc
          {%- elif cookiecutter.code_qa == 'flake8' -%}
          pylint-enabled: false
          flake8-enabled: true
          flake8-args: {{cookiecutter.app_name}}/ tests/
          {%- elif cookiecutter.code_qa == 'ruff' -%}
          pylint-enabled: false
          ruff-enabled: true
          ruff-args: "."
          {%- endif %}
          mypy-args: {{cookiecutter.app_name}}/
      - python/test:
          name: test
          executor: tests-runner
          pkg-manager: pip
          pip-dependency-file: requirements/development.txt
          cov: {{cookiecutter.app_name}}
          test-tool-args: |
            --verbose

      {% if cookiecutter.circle_ci_config == "airflow-task" %}
      # Staging
      - hold:
          name: hold-staging
          type: approval
          requires:
            - code-qa
            - test
            - build
          filters:
            branches:
              ignore: main
      - push-docker-image:
          name: push-docker-image-staging
          env: staging
          requires:
            - hold-staging
          context:
            - gcp-secrets
          filters:
            branches:
              ignore: main
      {% else %}
      # Staging
      - push-docker-image:
          name: push-docker-image-staging
          env: staging
          requires:
            - code-qa
            - test
            - build
          context:
            - gcp-secrets
          filters:
            branches:
              only: {% if cookiecutter.circle_ci_config == "trunk" %}develop{% elif cookiecutter.circle_ci_config == "CI-CD" %}main{% endif %}
      {% endif %}

      # Production
      - hold:
          name: hold-production
          type: approval
          requires:
            - code-qa
            - test
            - build
          filters:
            branches:
              only: main
      - push-docker-image:
          name: push-docker-image-prod
          env: prod
          requires:
            - hold-production
          context:
            - gcp-secrets
          filters:
            branches:
              only: main
